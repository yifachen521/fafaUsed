<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fafa.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fafa.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, username, password, QQ, create_at,email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getUserList" resultMap="BaseResultMap" parameterType="String">
    select <include refid="Base_Column_List" /> from user
    <where>
      <if test="username!='' and username!=null ">
        and username like concat('%',#{username},'%')
      </if>
      <if test="phone!='' and phone!=null ">
        and phone like concat('%',#{phone},'%')
      </if>
      <if test="qq!='' and qq!=null ">
        and qq like concat('%',#{qq},'%')
      </if>
    </where>
  </select>

  <!--根据手机号查询用户-->
  <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="String" >
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone}
  </select>
  
  <select id="getUserById" resultMap="BaseResultMap" parameterType="Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
   <!--根据手机号 用户名 qq查询用户-->
  <select id="getUserListByUser" resultMap="BaseResultMap" parameterType="String">
    select <include refid="Base_Column_List" /> from user
    <where>
      <if test="phone!='' and phone!=null ">
        and phone like concat('%',#{phone},'%')
      </if>
      <if test="username!='' and username!=null ">
        and username like concat('%',#{username},'%')
      </if>
      <if test="qq!='' and qq!=null ">
        and qq like concat('%',#{qq},'%')
      </if>
    </where>
    limit #{start},#{rows}
    </select>
	<select id="getUserListOrderByCreateAt" resultMap="BaseResultMap" parameterType="String">
	    select <include refid="Base_Column_List" /> from user Order By create_at Desc
	</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fafa.pojo.User" >
    insert into user (phone, username,
      password,create_at,email)
    values (#{phone}, #{username},
      #{password}, #{createAt},#{email})
  </insert>
  <insert id="insertSelective" parameterType="com.fafa.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="qq != null" >
        QQ,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="goodsNum != null" >
        goods_num,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="power != null" >
        #{power,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fafa.pojo.User" >
    update user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fafa.pojo.User" >
    update user
    set phone = #{phone,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=VARCHAR},
      email=#{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateGoodsNum" parameterType="Integer" >
    update user set
    goods_num = #{goodsNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePwdByEmail" parameterType="Integer" >
    update user set
    password = #{password,jdbcType=CHAR}
    where email = #{email,jdbcType=VARCHAR}
  </update>

  
</mapper>